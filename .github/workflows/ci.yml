name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install pytest
          pip install -r auth-service/requirements.txt
          pip install -r hotel-service/requirements.txt
          pip install -r booking-service/requirements.txt
          pip install -r payment-service/requirements.txt

      - name: Run Python tests (Auth Service)
        working-directory: ./auth-service
        run: pytest -q

      - name: Run Python tests (Hotel Service)
        working-directory: ./hotel-service
        run: pytest -q

      - name: Run Python tests (Booking Service)
        working-directory: ./booking-service
        run: pytest -q

      - name: Run Python tests (Payment Service)
        working-directory: ./payment-service
        run: pytest -q

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run frontend build
        working-directory: ./frontend
        run: npm run build

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-service:latest ./auth-service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/hotel-service:latest ./hotel-service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/booking-service:latest ./booking-service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/payment-service:latest ./payment-service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./frontend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gateway:latest ./gateway

          docker push ${{ secrets.DOCKER_USERNAME }}/auth-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/hotel-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/booking-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/payment-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/gateway:latest
